<?php
/**
 * BlacklistApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Messente\Api
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Messente API
 *
 * [Messente](https://messente.com) is a global provider of messaging and user verification services. Use Messente API library to send and receive SMS, Viber and WhatsApp messages, blacklist phone numbers to make sure you're not sending any unwanted messages, manage contacts and groups.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: messente@messente.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Messente\Api;

use \Messente\Api\Configuration;
use \Messente\Api\ApiException;
use \Messente\Api\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * BlacklistApiTest Class Doc Comment
 *
 * @category Class
 * @package  Messente\Api
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class BlacklistApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for addToBlacklist
     *
     * Adds a phone number to the blacklist.
     *
     */
    public function testAddToBlacklist()
    {
    }

    /**
     * Test case for deleteFromBlacklist
     *
     * Deletes a phone number from the blacklist.
     *
     */
    public function testDeleteFromBlacklist()
    {
    }

    /**
     * Test case for fetchBlacklist
     *
     * Returns all blacklisted phone numbers.
     *
     */
    public function testFetchBlacklist()
    {
    }

    /**
     * Test case for isBlacklisted
     *
     * Checks if a phone number is blacklisted.
     *
     */
    public function testIsBlacklisted()
    {
    }
}
